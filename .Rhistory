labels = colnames(issp_2019_anger),
groups = ggm_groups0, color = ggm_colors,
legend=F, title = "Anger = 0", title.cex = 12,
edge.color=cond0$pairwise$edgecolor_cb,
borders = T, vsize=10, esize = 15,
label.scale = F, label.cex = 100,  vTrans = 100
)
set.seed(1)
Graph_cond_7 = qgraph(cond7$pairwise$wadj, layout = L,
labels = colnames(issp_2019_anger),
groups = ggm_groups7, color = ggm_colors,
legend=F, title = "Anger = 7", title.cex = 12,
edge.color=cond7$pairwise$edgecolor_cb,
borders = T, vsize=10, esize = 15,
label.scale = F, label.cex = 100,  vTrans = 100
)
set.seed(1)
Graph_cond_3 = qgraph(cond3$pairwise$wadj, layout = L,
labels = colnames(issp_2019_anger),
groups = ggm_groups3, color = ggm_colors,
legend=F, title = "Anger = 3", title.cex = 12,
edge.color=cond3$pairwise$edgecolor_cb,
borders = T, vsize=10, esize = 15,
label.scale = F, label.cex = 100,  vTrans = 100
)
set.seed(1)
Graph_cond_10 = qgraph(cond10$pairwise$wadj, layout = L,
labels = colnames(issp_2019_anger),
groups = ggm_groups10, color = ggm_colors,
legend=F, title = "Anger = 10", title.cex = 12,
edge.color=cond10$pairwise$edgecolor_cb,
borders = T, vsize=10, esize = 15,
label.scale = F, label.cex = 100,  vTrans = 100
)
dev.off()
jpeg(here("Output", "Fig_3.jpg"),
height = 12000, width = 12000, quality = 1000)
L<-averageLayout(Graph_cond_0, Graph_cond_3, Graph_cond_7, Graph_cond_10, layout = "spring")
lmat <- matrix(1:4, 2)
lo <- layout(lmat, width = c(1, 1))
set.seed(1)
Graph_cond_0 = qgraph(cond0$pairwise$wadj, layout = L,
labels = colnames(issp_2019_anger),
groups = ggm_groups0, color = ggm_colors,
legend=F, title = "Anger = 0", title.cex = 12,
edge.color=cond0$pairwise$edgecolor_cb,
borders = T, vsize=10, esize = 15,
label.scale = F, label.cex = 10,  vTrans = 100
)
set.seed(1)
Graph_cond_7 = qgraph(cond7$pairwise$wadj, layout = L,
labels = colnames(issp_2019_anger),
groups = ggm_groups7, color = ggm_colors,
legend=F, title = "Anger = 7", title.cex = 12,
edge.color=cond7$pairwise$edgecolor_cb,
borders = T, vsize=10, esize = 15,
label.scale = F, label.cex = 10,  vTrans = 100
)
set.seed(1)
Graph_cond_3 = qgraph(cond3$pairwise$wadj, layout = L,
labels = colnames(issp_2019_anger),
groups = ggm_groups3, color = ggm_colors,
legend=F, title = "Anger = 3", title.cex = 12,
edge.color=cond3$pairwise$edgecolor_cb,
borders = T, vsize=10, esize = 15,
label.scale = F, label.cex = 10,  vTrans = 100
)
set.seed(1)
Graph_cond_10 = qgraph(cond10$pairwise$wadj, layout = L,
labels = colnames(issp_2019_anger),
groups = ggm_groups10, color = ggm_colors,
legend=F, title = "Anger = 10", title.cex = 12,
edge.color=cond10$pairwise$edgecolor_cb,
borders = T, vsize=10, esize = 15,
label.scale = F, label.cex = 10,  vTrans = 100
)
dev.off()
jpeg(here("Output", "Fig_3.jpg"),
height = 12000, width = 12000, quality = 1000)
L<-averageLayout(Graph_cond_0, Graph_cond_3, Graph_cond_7, Graph_cond_10, layout = "spring")
lmat <- matrix(1:4, 2)
lo <- layout(lmat, width = c(1, 1))
set.seed(1)
Graph_cond_0 = qgraph(cond0$pairwise$wadj, layout = L,
labels = colnames(issp_2019_anger),
groups = ggm_groups0, color = ggm_colors,
legend=F, title = "Anger = 0", title.cex = 12,
edge.color=cond0$pairwise$edgecolor_cb,
borders =  F,vsize=10, esize = 15,
label.scale = F, label.cex = 25
)
set.seed(1)
Graph_cond_7 = qgraph(cond7$pairwise$wadj, layout = L,
labels = colnames(issp_2019_anger),
groups = ggm_groups7, color = ggm_colors,
legend=F, title = "Anger = 7", title.cex = 12,
edge.color=cond7$pairwise$edgecolor_cb,
borders =  F,vsize=10, esize = 15,
label.scale = F, label.cex = 25
)
set.seed(1)
Graph_cond_3 = qgraph(cond3$pairwise$wadj, layout = L,
labels = colnames(issp_2019_anger),
groups = ggm_groups3, color = ggm_colors,
legend=F, title = "Anger = 3", title.cex = 12,
edge.color=cond3$pairwise$edgecolor_cb,
borders =  F,vsize=10, esize = 15,
label.scale = F, label.cex = 25
)
set.seed(1)
Graph_cond_10 = qgraph(cond10$pairwise$wadj, layout = L,
labels = colnames(issp_2019_anger),
groups = ggm_groups10, color = ggm_colors,
legend=F, title = "Anger = 10", title.cex = 12,
edge.color=cond10$pairwise$edgecolor_cb,
borders =  F,vsize=10, esize = 15,
label.scale = F, label.cex = 25
)
dev.off()
ggm_colors <- c("#FBB4AE",  "#A6D9E0", "#CCEBC5", "#FDDA77")
#plot
set.seed(100)
GraphMGM<-qgraph(mgm_issp_2019_nodes$pairwise$wadj, layout = 'spring',
labels = shortnames_22, nodeNames = legendnames_22,
groups = ggm_groups, color = ggm_colors,
legend=T, legend.cex = 0.33,
label.scale = F, label.cex = 0.7,
edge.color=mgm_issp_2019_nodes$pairwise$edgecolor_cb,
borders = T, vsize=7.0, vTrans = 100, esize = 15, GLratio = 2,
pie = pred_obj$errors[,2], pieColor = rep('gray50',22),
filetype="jpg", filename=here("Output", "Fig_1"))
#plot
set.seed(100)
GraphMGM<-qgraph(mgm_issp_2019_nodes$pairwise$wadj, layout = 'spring',
labels = shortnames_22, nodeNames = legendnames_22,
groups = ggm_groups, color = ggm_colors,
legend=T, legend.cex = 0.33,
label.scale = F, label.cex = 0.7,
edge.color=mgm_issp_2019_nodes$pairwise$edgecolor_cb,
borders = T, vsize=7.0, esize = 15, GLratio = 2,
pie = pred_obj$errors[,2], pieColor = rep('gray50',22),
filetype="jpg", filename=here("Output", "Fig_1"))
#plot with 3 levels and fixed layout
Graph_cond_0 = qgraph(cond0$pairwise$wadj)
Graph_cond_3 = qgraph(cond3$pairwise$wadj)
Graph_cond_7 = qgraph(cond7$pairwise$wadj)
Graph_cond_10 = qgraph(cond10$pairwise$wadj)
Graph_cond_0 = Graph_cond_0$pairwise$wadj[1:22,1:22]
Graph_cond_3 = Graph_cond_3$pairwise$wadj[1:22,1:22]
Graph_cond_7 = Graph_cond_7$pairwise$wadj[1:22,1:22]
Graph_cond_10 = Graph_cond_10$pairwise$wadj[1:22,1:22]
#multiplot
jpeg(here("Output", "Fig_3.jpg"),
height = 12000, width = 12000, quality = 1000)
L<-averageLayout(Graph_cond_0, Graph_cond_3, Graph_cond_7, Graph_cond_10, layout = "spring")
Graph_cond_0
#plot with 3 levels and fixed layout
Graph_cond_0 = qgraph(cond0$pairwise$wadj)
Graph_cond_0
cond0
cond0
cond0$pairwise$wadj[1:22,1:22]
Graph_cond_0_wadj = cond0$pairwise$wadj[1:22,1:22]
Graph_cond_3_wadj = cond3$pairwise$wadj[1:22,1:22]
Graph_cond_7_wadj = cond7$pairwise$wadj[1:22,1:22]
Graph_cond_10_wadj = cond10$pairwise$wadj[1:22,1:22]
#plot with 3 levels and fixed layout
Graph_cond_0 = qgraph(Graph_cond_0_wadj)
Graph_cond_3 = qgraph(Graph_cond_3_wadj)
Graph_cond_7 = qgraph(Graph_cond_7_wadj)
Graph_cond_10 = qgraph(Graph_cond_10_wadj)
#multiplot
jpeg(here("Output", "Fig_3.jpg"),
height = 12000, width = 12000, quality = 1000)
L<-averageLayout(Graph_cond_0, Graph_cond_3, Graph_cond_7, Graph_cond_10, layout = "spring")
lmat <- matrix(1:4, 2)
lo <- layout(lmat, width = c(1, 1))
set.seed(1)
Graph_cond_0 = qgraph(cond0$pairwise$wadj, layout = L,
labels = colnames(issp_2019_anger),
groups = ggm_groups0, color = ggm_colors,
legend=F, title = "Anger = 0", title.cex = 12,
edge.color=cond0$pairwise$edgecolor_cb,
borders =  F,vsize=10, esize = 15,
label.scale = F, label.cex = 25
)
L<-averageLayout(Graph_cond_0, Graph_cond_3, Graph_cond_7, Graph_cond_10, layout = "spring")
L
lmat <- matrix(1:4, 2)
lo <- layout(lmat, width = c(1, 1))
set.seed(1)
Graph_cond_0 = qgraph(cond0$pairwise$wadj, layout = L,
labels = colnames(issp_2019_anger),
groups = ggm_groups0, color = ggm_colors,
legend=F, title = "Anger = 0", title.cex = 12,
edge.color=cond0$pairwise$edgecolor_cb,
borders =  F,vsize=10, esize = 15,
label.scale = F, label.cex = 25
)
Graph_cond_0 = qgraph(Graph_cond_0, layout = L,
labels = colnames(issp_2019_anger),
groups = ggm_groups0, color = ggm_colors,
legend=F, title = "Anger = 0", title.cex = 12,
edge.color=cond0$pairwise$edgecolor_cb,
borders =  F,vsize=10, esize = 15,
label.scale = F, label.cex = 25
)
#multiplot
jpeg(here("Output", "Fig_3.jpg"),
height = 12000, width = 12000, quality = 1000)
L<-averageLayout(Graph_cond_0, Graph_cond_3, Graph_cond_7, Graph_cond_10, layout = "spring")
L<-averageLayout(Graph_cond_0, Graph_cond_3, Graph_cond_7, Graph_cond_10, layout = "spring")
knitr::opts_chunk$set(echo = TRUE)
#libraries
library(pacman)
p_load(tidyverse, janitor, here, haven, labelled, sjmisc, skimr,
stargazer, IsingFit, qgraph, Matrix, igraph, NetworkComparisonTest, bootnet,
rio, IsingSampler, compute.es, foreign, mgm, matrixcalc, openxlsx, Rcpp,
forestplot, ggplot2, compute.es, jtools, glue, EGAnet, signnet)
#remove scipen
options(scipen=999)
#Import dataset
load(here("Input", "usa_data.RData"))
shortnames_22 = names(issp_2019_nodes)
shortnames_23 = names(issp_2019_anger)
longnames_22 <- c("Perception of large income inequality (p_income)",
"Perception of tax regressivity (p_tax)",
"Belief in progressive taxation (b_tax)",
"Judgment of unfair distribution (j_income)",
"Judgment of political distrust in redistribution (b_distrust)",
"Judgment of failure of public redistribution (b_failure)",
"Importance of wealthy family (e_weafam)",
"Importance of parental education (e_edupar)",
"Importance of education (e_edu)",
"Importance of hard work (e_work)",
"Importance of knowing right people (e_people)",
"Importance of political connections (e_connec)",
"Importance of giving bribes (e_bribes)",
"Importance of race (e_race)",
"Importance of religion (e_relig)",
"Importance of sex (e_sex)",
"Belief in public redistribution (b_public)",
"Belief in market redistribution (b_market)",
"Pay criteria: Responsibility (b_resp)",
"Pay criteria: Training (b_train)",
"Pay criteria: Need (b_need)",
"Pay criteria: Merit (b_merit)")
legendnames_22 <- c("Perception of large income inequality",
"Perception of tax regressivity",
"Belief in progressive taxation",
"Judgment of unfair distribution",
"Judgment of political distrust in redistribution",
"Judgment of failure of public redistribution",
"Importance of wealthy family",
"Importance of parental education",
"Importance of education",
"Importance of hard work",
"Importance of knowing right people",
"Importance of political connections",
"Importance of giving bribes",
"Importance of race",
"Importance of religion",
"Importance of sex",
"Belief in public redistribution",
"Belief in market redistribution",
"Pay criteria: Responsibility",
"Pay criteria: Training",
"Pay criteria: Need",
"Pay criteria: Merit")
#remove haven labels
issp_2019_nodes = sapply(issp_2019_nodes, haven::zap_labels)
issp_2019_can = sapply(issp_2019_can, haven::zap_labels)
issp_2019_anger = sapply(issp_2019_anger, haven::zap_labels)
#Communities
ega_results <- EGA(
data = issp_2019_nodes,
method = "glasso",         # "glasso" for GGM estimation with graphical LASSO
community_detection = "walktrap" # Default is Walktrap, but you can specify others if needed
)
ega_results$wc
#colors
ggm_groups = list(
"Community 1"=c(1,2,3,4,5,6,17,18),
"Community 2"=c(7,8,11,12,13,21),
"Community 3"=c(9,10,19,20,22),
"Community 4"=c(14,15,16)
)
# ega_colors <- c(
#   "#E41A1C", # Red
#   "#377EB8", # Blue
#   "#4DAF4A", # Green
#   "#984EA3", # Purple
#   "#FF7F00", # Orange
#   "#FFFF33", # Yellow
#   "#A65628", # Brown
#   "#F781BF"  # Pink
# )
ggm_colors <- c("#FBB4AE",  "#A6D9E0", "#CCEBC5", "#FDDA77")
#fit mgm
mgm_issp_2019_nodes = mgm(issp_2019_nodes, type = rep("g",22),
level = rep(1, 22), lambdaSel = "EBIC", ruleReg = "OR")
#predictability
pred_obj <- predict(object = mgm_issp_2019_nodes,
data = issp_2019_nodes,
errorCon = 'R2')
#descriptives
mgm_nodes_desc = as.vector(mgm_issp_2019_nodes$pairwise$wadj)
length(mgm_nodes_desc[mgm_nodes_desc != 0])/462
pred_df = pred_obj$errors %>%
arrange(R2)
#plot
set.seed(100)
GraphMGM<-qgraph(mgm_issp_2019_nodes$pairwise$wadj, layout = 'spring',
labels = shortnames_22, nodeNames = legendnames_22,
groups = ggm_groups, color = ggm_colors,
legend=T, legend.cex = 0.33,
label.scale = F, label.cex = 0.7,
edge.color=mgm_issp_2019_nodes$pairwise$edgecolor_cb,
borders = T, vsize=7.0, esize = 15, GLratio = 2,
pie = pred_obj$errors[,2], pieColor = rep('gray50',22),
filetype="jpg", filename=here("Output", "Fig_1"))
# ITA_small_core = qgraph::smallworldness(CANFit$weiadj, B = 1000)
(small_w = NetworkToolbox::smallworldness(mgm_issp_2019_nodes$pairwise$wadj, iter = 1000,
progBar = FALSE, method = c("TJHBL")))
#ASPL
NetworkToolbox::pathlengths(mgm_issp_2019_nodes$pairwise$wadj, weighted = FALSE)
#Clustering
NetworkToolbox::transitivity(mgm_issp_2019_nodes$pairwise$wadj, weighted = FALSE)
#centrality
centrality_mgm_graph = centralityPlot(GraphMGM, labels = longnames_22,
orderBy = "Strength",
scale = "z-scores")
centrality_mgm_graph = centrality_mgm_graph +
geom_vline(xintercept=0, linetype="dotted") +
scale_x_continuous(limits = c(-2,3), breaks = c(-2,-1,0,1,2,3)) +
# theme_nice() +
theme(axis.text.y=element_text(hjust=1))
ggsave(here("Output", "Fig_2.jpg"), centrality_mgm_graph,
height = 4)
#Fit moderated ggm
mgm_mod <- mgm(data = issp_2019_anger,
type = rep("g", 23),
level = rep(1, 23),
lambdaSel = "CV",
ruleReg = "OR",
moderators = 23,
threshold = "none",
pbar = FALSE)
#Inspect interaction parameters [comments are wrong:readapt]
mgm_mod$interactions$indicator
#45 pairwise interactions
#27 3-way interactions (moderation)
#acces a pairwise interaction between variables 1 (p_ineq) and 3 (p_tax) can be obtained like this:
showInteraction(object = mgm_mod, int = c(1,22))
#access a 3-way interaction
showInteraction(object = mgm_mod, int = c(1,22,23))
#redis_f redis_p = 0.025
#mod = 0.064
# if anger 0, redis_f redis_p = 0.025 + 0.064 * 0 = 0.025
# if anger 3, redis_f redis_p = 0.025 + 0.064 * 3 = 0.217
# if anger 7, redis_f redis_p = 0.025 + 0.064 * 7 = 0.473
# if anger 10, redis_f redis_p = 0.025 + 0.064 * 10 = 0.665
#family sex = 0.065
#mod = 0.041
# if anger 0, family sex= 0.065 + 0.041 * 0 = 0.065
# if anger 10,family sex = 0.065 + 0.041 * 10 = 0.475
#edu redis_m = 0.009
#mod = 0.026
# if anger 0, edu redis_m= 0.009 + 0.026 * 0 = 0.009
# if anger 10,edu redis_m = 0.009 + 0.026 * 10 = 0.269
#edupar race = 0.0
#mod = -0.030
# if anger 0, edupar race = 0.0 -0.030 * 0 = 0.0
# if anger 10,edupar race = 0.0 -0.030 * 10 = -0.300
#edu bribes = 0
#mod = -0.018
# if anger 0, edu bribes = -0.018 +0.040  * 0 = -0.018
# if anger 10,edu bribes = -0.018 -0.040  * 10 = -0.418
#family connec = 0.145
#mod = 0.032
# if anger 0, edu bribes = 0.145 + 0.032 * 0 = 0.145
# if anger 10,edu bribes = 0.145 + 0.032 * 10 = 0.465
#ineq_p merit = 0.010
#mod = 0.011
# if anger 0, ineq_p merit = 0.010+ 0.011* 0 = 0.010
# if anger 3, ineq_p merit = 0.010+ 0.011* 3 = 0.043
# if anger 7, ineq_p merit = 0.010+ 0.011* 7 = 0.087
# if anger 10,ineq_p merit  =0.010 +0.011 * 10 = 0.120
#access scale of anger (every variable is mean-centered and sd=1)
tb <- table(scale(issp_2019_anger[,23]))
names(tb) <- round(as.numeric(names(tb)), 2)
barplot(tb, axes=FALSE, xlab="", ylim=c(0, 250))
axis(2, las=2, c(0, 50, 100, 150, 200, 250))
#conditioning on the moderator, interesting values are 0, 3, 7, 10 of v 11 (anger)
cond0 <- condition(object = mgm_mod,
values = list('23' = 0))
cond3 <- condition(object = mgm_mod,
values = list('23' = 3))
cond7 <- condition(object = mgm_mod,
values = list('23' = 7))
cond10 <- condition(object = mgm_mod,
values = list('23' = 10))
#these are now 3 different pairwise models, in which anger is fixed at 3 diff values
cond0wadj = cond0$pairwise$wadj[1:22,1:22]
cond3wadj = cond3$pairwise$wadj[1:22,1:22]
cond7wadj = cond7$pairwise$wadj[1:22,1:22]
cond10wadj = cond10$pairwise$wadj[1:22,1:22]
walktrap_ega0 <- community.detection(
network = cond0wadj,         # The GGM matrix
method = "walktrap"            # Specify Walktrap for community detection
)
walktrap_ega3 <- community.detection(
network = cond3wadj,         # The GGM matrix
method = "walktrap"            # Specify Walktrap for community detection
)
walktrap_ega7 <- community.detection(
network = cond7wadj,         # The GGM matrix
method = "walktrap"            # Specify Walktrap for community detection
)
walktrap_ega10 <- community.detection(
network = cond10wadj,         # The GGM matrix
method = "walktrap"            # Specify Walktrap for community detection
)
walktrap_ega0
walktrap_ega3
walktrap_ega7
walktrap_ega10
#colors
ggm_groups0 = list(
"Community 1" = c(1, 2, 3, 4, 5, 6, 17, 18),
"Community 2" = c(7, 11, 12, 13, 21),
"Community 3" = c(8, 9, 10, 19, 20, 22),
"Community 4" = c(14, 15, 16)
)
ggm_groups3 = list(
"Community 1" = c(1, 2, 3, 4, 5, 6, 17, 18, 21),
"Community 2" = c(7, 8, 9, 10, 11, 12, 13),
"Community 3" = c(19, 20, 22),
"Community 4" = c(14, 15, 16)
)
ggm_groups7 = list(
"Community 1" = c(1, 2, 3, 4, 5, 6, 17, 21),
"Community 2" = c(7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 22),
"Community 3" = c(19, 20)
)
ggm_groups10 = list(
"Community 1" = c(1, 2, 3, 4, 5, 6, 17, 21),
"Community 2" = c(7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 22),
"Community 3" = c(19, 20)
)
# ega_colors <- c(
#   "#E41A1C", # Red
#   "#377EB8", # Blue
#   "#4DAF4A", # Green
#   "#984EA3", # Purple
#   "#FF7F00", # Orange
#   "#FFFF33", # Yellow
#   "#A65628", # Brown
#   "#F781BF"  # Pink
# )
Graph_cond_0_wadj = cond0$pairwise$wadj[1:22,1:22]
Graph_cond_3_wadj = cond3$pairwise$wadj[1:22,1:22]
Graph_cond_7_wadj = cond7$pairwise$wadj[1:22,1:22]
Graph_cond_10_wadj = cond10$pairwise$wadj[1:22,1:22]
#plot with 3 levels and fixed layout
Graph_cond_0 = qgraph(Graph_cond_0_wadj)
Graph_cond_3 = qgraph(Graph_cond_3_wadj)
Graph_cond_7 = qgraph(Graph_cond_7_wadj)
Graph_cond_10 = qgraph(Graph_cond_10_wadj)
#multiplot
jpeg(here("Output", "Fig_3.jpg"),
height = 12000, width = 12000, quality = 1000)
L<-averageLayout(Graph_cond_0, Graph_cond_3, Graph_cond_7, Graph_cond_10, layout = "spring")
lmat <- matrix(1:4, 2)
lo <- layout(lmat, width = c(1, 1))
set.seed(1)
Graph_cond_0 = qgraph(Graph_cond_0, layout = L,
labels = colnames(issp_2019_anger),
groups = ggm_groups0, color = ggm_colors,
legend=F, title = "Anger = 0", title.cex = 12,
edge.color=cond0$pairwise$edgecolor_cb,
borders =  F,vsize=10, esize = 15,
label.scale = F, label.cex = 25
)
set.seed(1)
Graph_cond_7 = qgraph(Graph_cond_7, layout = L,
labels = colnames(issp_2019_anger),
groups = ggm_groups7, color = ggm_colors,
legend=F, title = "Anger = 7", title.cex = 12,
edge.color=cond7$pairwise$edgecolor_cb,
borders =  F,vsize=10, esize = 15,
label.scale = F, label.cex = 25
)
set.seed(1)
Graph_cond_3 = qgraph(Graph_cond_3, layout = L,
labels = colnames(issp_2019_anger),
groups = ggm_groups3, color = ggm_colors,
legend=F, title = "Anger = 3", title.cex = 12,
edge.color=cond3$pairwise$edgecolor_cb,
borders =  F,vsize=10, esize = 15,
label.scale = F, label.cex = 25
)
set.seed(1)
Graph_cond_10 = qgraph(Graph_cond_10, layout = L,
labels = colnames(issp_2019_anger),
groups = ggm_groups10, color = ggm_colors,
legend=F, title = "Anger = 10", title.cex = 12,
edge.color=cond10$pairwise$edgecolor_cb,
borders =  F,vsize=10, esize = 15,
label.scale = F, label.cex = 25
)
dev.off()
